{"version":3,"sources":["wscljs/spec.cljs"],"mappings":";AAGA,AAAA,AAAMA,AAAUC;AAAhB,AAAmB,AAAK,AAAA,AAAMA;;AAE9B,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAwB,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAOJ;AAAP,AACQ,AAAA,AAACK,AAAI,AAAAD;AADb;AAGxB,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAoBF;AAEpB,AAAAE,AAAA,AAAA,AAAA,AAAA,AACE,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAA;AAAA,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAAA;AAAA,AAAA,AAAA,AAAAC,AAAAD,AAAA,AAAAE,AAAAF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA","names":["wscljs.spec/not-nil?","x","cljs.spec.alpha/def-impl","cljs.spec.alpha/and-spec-impl","p1__48170#","cljs.core._EQ_","cljs.spec.alpha/map-spec-impl","G__48171","cljs.core/map?","cljs.core/contains?"],"sourcesContent":["(ns wscljs.spec\n  (:require [cljs.spec.alpha :as s]))\n\n(defn not-nil? [x] (not (nil? x)))\n\n(s/def ::websocket-open (s/and not-nil?\n                               #(= 1 (.-readyState %))))\n\n(s/def ::on-message not-nil?)\n\n(s/def ::websocket-handler-map\n  (s/keys :req-un [::on-message]\n          :opt-un [::on-open\n                   ::on-close\n                   ::on-error]))\n"]}