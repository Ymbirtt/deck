{"version":3,"sources":["day8/re_frame_10x/fx/local_storage.cljs"],"mappings":"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","names":["day8.re-frame-10x.fx.local-storage/storage","js/goog.storage.Storage","js/goog.storage.mechanism.HTML5LocalStorage","day8.re-frame-10x.fx.local-storage/safe-prefix","day8.re-frame-10x.fx.local-storage/safe-key","key","var_args","G__46464","day8.re-frame-10x.fx.local-storage/get","js/Error","day8.re_frame_10x.fx.local_storage.get","not-found","value","cljs.reader.read_string","day8.re-frame-10x.fx.local-storage/save!","cljs.core.pr_str","day8.re-frame-10x.fx.local-storage/delete-all-keys!","seq__46465","cljs.core/seq","chunk__46466","count__46467","i__46468","temp__5735__auto__","cljs.core/chunked-seq?","c__4556__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","k","js/Object.keys","js/localStorage","clojure.string/starts-with?","G__46473","day8.re-frame-10x.fx.local-storage/after","args-arr__4757__auto__","len__4736__auto__","i__4737__auto__","argseq__4758__auto__","cljs.core/IndexedSeq","seq46471","G__46472","self__4723__auto__","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core/after","x","ks","cljs.core/run!","v","cljs.core/vector?","cljs.core.get_in","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core/reg-cofx","p__46474","map__46475","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","coeffects","or","cljs.core.assoc","cljs.core.keyword"],"sourcesContent":["(ns day8.re-frame-10x.fx.local-storage\n  (:require\n    [goog.storage.Storage]\n    [goog.storage.mechanism.HTML5LocalStorage]\n    [cljs.reader    :as reader]\n    [clojure.string :as string]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core :as rf])\n  (:refer-clojure :exclude [get]))\n\n(def storage (goog.storage.Storage. (goog.storage.mechanism.HTML5LocalStorage.)))\n\n(def safe-prefix \"day8.re-frame-10x.\")\n\n(defn- safe-key [key]\n  \"Adds a unique prefix to local storage keys to ensure they don't collide with the host application\"\n  (str safe-prefix key))\n\n(defn get\n  \"Gets a re-frame-10x value from local storage.\"\n  ([key]\n   (get key nil))\n  ([key not-found]\n   (let [value (.get storage (safe-key key))]\n     (if (undefined? value)\n       not-found\n       (reader/read-string value)))))\n\n(defn save!\n  \"Saves a re-frame-10x value to local storage.\"\n  [key value]\n  (.set storage (safe-key key) (pr-str value)))\n\n(defn delete-all-keys!\n  \"Deletes all re-frame-10x config keys\"\n  []\n  (doseq [k (js/Object.keys js/localStorage)]\n    (when (string/starts-with? k safe-prefix)\n      (.remove storage k))))\n\n(defn after\n  ([key]\n   (rf/after\n     (fn [x]\n       (save! key x))))\n  ([key & ks]\n   (rf/after\n     (fn [x]\n       (run!\n         (fn [k]\n           (let [v (if (vector? k) (get-in x k) (get x k))]\n             (save! key v)))\n         ks)))))\n\n(rf/reg-cofx\n  ::get\n  (fn [coeffects {:keys [key or]}]\n    (assoc coeffects\n      (keyword key)\n      (get key or))))"]}