{"version":3,"sources":["day8/re_frame_10x/panels/app_db/subs.cljs"],"mappings":";AAKA,AAAA,AAACA,AAEC,AAAAC,AAAsBO;AAAtB,AAAA,AAAAN,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAaK;AAAb,AACEA;;AAEJ,AAAA,AAAA,AAAA,AAAA,AAACP,AAGC,AAAKS,AAAMD;AAAX,AACE,AAAA,AAAA,AAAA,AAACE,AAAOD;;AAEZ,AAAA,AAAA,AAAA,AAAA,AAACT,AAGC,AAAKS,AAAMD;AAAX,AACE,AAAA,AAAA,AAAA,AAACE,AAAOD;;AAEZ,AAAA,AAAA,AAAA,AAAA,AAACT,AAGC,AAAAW,AAAqBH;AAArB,AAAA,AAAAI,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAT,AAAA,AAAAS,AAAA,AAAA,AAAA,AAAA,AAAAR,AAAAC,AAAAO,AAAAA;AAAA,AAAAN,AAAAM,AAAA,AAAaC;AAAb,AACE,AAAA,AAAAC,AAACC;AAAD,AAAM,AAAA,AAACC,AAAM,AAAAF,AAACG,AAAW,AAAAH,AAACI;AACrBL;;AAGT,AAAA,AAAA,AAAA,AAAA,AAACb,AAGC,AAAAmB,AAA6BX;AAA7B,AAAA,AAAAY,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAjB,AAAA,AAAAiB,AAAA,AAAA,AAAA,AAAA,AAAAhB,AAAAC,AAAAe,AAAAA;AAAA,AAAAd,AAAAc,AAAA,AAAaC;AAAb,AACEA;;AAEJ,AAAA,AAAA,AAAA,AAAA,AAACrB,AAGC,AAAAsB,AAAkCd;AAAlC,AAAA,AAAAe,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAApB,AAAA,AAAAoB,AAAA,AAAA,AAAA,AAAA,AAAAnB,AAAAC,AAAAkB,AAAAA;AAAA,AAAAjB,AAAAiB,AAAA,AAAaC;AAAb,AACEA;;AAEJ,AAAA,AAAA,AAAA,AAAA,AAACxB,AAGC,AAAAyB,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAiBlB;AAAjB,AAAAmB,AAAAD,AAAA,AAAA,AAAmBG;AAAnB,AACE,AAACC,AAAUF,AAAWC;;AAG1B,AAAA,AAAA,AAAA,AAAA,AAAC7B,AAGC,AAAA+B,AAA0BvB;AAA1B,AAAA,AAAAwB,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA7B,AAAA,AAAA6B,AAAA,AAAA,AAAA,AAAA,AAAA5B,AAAAC,AAAA2B,AAAAA;AAAA,AAAA1B,AAAA0B,AAAA,AAAaC;AAAb,AACEA","names":["day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.core.reg_sub","p__45926","map__45927","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","app-db","_","trace","cljs.core.get_in","p__45931","map__45932","paths","p1__45930#","cljs.core.map","cljs.core.assoc","cljs.core/val","cljs.core/key","p__45940","map__45941","search-string","p__45944","map__45945","json-ml-expansions","p__45947","vec__45948","cljs.core.nth","expansions","path","cljs.core/contains?","p__45957","map__45958","reagent-id"],"sourcesContent":["(ns day8.re-frame-10x.panels.app-db.subs\n  (:require\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core :as rf]\n    [day8.re-frame-10x.navigation.epochs.subs :as epochs]))\n\n(rf/reg-sub\n  ::root\n  (fn [{:keys [app-db]} _]\n    app-db))\n\n(rf/reg-sub\n  ::current-epoch-app-db-after\n  :<- [::epochs/selected-event-trace]\n  (fn [trace _]\n    (get-in trace [:tags :app-db-after])))\n\n(rf/reg-sub\n  ::current-epoch-app-db-before\n  :<- [::epochs/selected-event-trace]\n  (fn [trace _]\n    (get-in trace [:tags :app-db-before])))\n\n(rf/reg-sub\n  ::paths\n  :<- [::root]\n  (fn [{:keys [paths]} _]\n    (map #(assoc (val %) :id (key %))\n         paths)))\n\n;; [IJ] TODO: This doesn't appear to be used anywhere:\n(rf/reg-sub\n  ::search-string\n  :<- [::root]\n  (fn [{:keys [search-string]} _]\n    search-string))\n\n(rf/reg-sub\n  ::expansions\n  :<- [::root]\n  (fn [{:keys [json-ml-expansions]} _]\n    json-ml-expansions))\n\n(rf/reg-sub\n  ::node-expanded?\n  :<- [::expansions]\n  (fn [expansions [_ path]]\n    (contains? expansions path)))\n\n;; [IJ] TODO: This doesn't appear to be used anywhere:\n(rf/reg-sub\n  ::reagent-id\n  :<- [::root]\n  (fn [{:keys [reagent-id]} _]\n    reagent-id))\n\n"]}