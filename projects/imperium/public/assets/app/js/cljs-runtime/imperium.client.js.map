{"version":3,"sources":["imperium/client.cljs"],"mappings":";AAKA,AAAA,AAAAA,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAgB,AAAA,AAACC;;AAC1B,AAAA,AAAAJ,AAAAC,AAAAI;AAAA;AAAA,AAAA,AAASC,AAAM,AAAA,AAACF;;AAChB,AAAA,AAAAJ,AAAAC,AAAAM;AAAA;AAAA,AAAA,AAASC,AAAS,AAAA,AAACJ;;AACnB,AAAA,AAAAJ,AAAAC,AAAAQ;AAAA;AAAA,AAAA,AAASC,AAAO,AAAA,AAACN;;AAEjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKO;AAML,AAAA,AAAMC,AAAeC,AAAKC,AAAMC,AAAWC;AAA3C,AACE,AAAA,AAAOC,AAAuBD;;AAEhC,AAAA,AAAME;AAAN,AACE,AAAAC,AAAsC,AAAA,AAAA,AAACQ,AAA4ChB;AAAnFQ,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAcK;AAAd,AAAAD,AAAAJ,AAAA,AAAsBM;AAAtB,AAAAF,AAAAJ,AAAA,AAA8BO;AAA9B,AACE,AAACE,AAAOzB,AAAgBqB;;AACxB,AAACI,AAAOtB,AAAMmB;;AACd,AAACG,AAAOpB,AAASkB;;AACjB,AAAA,AAACG,AAAUH,AAAqBd;;AAEpC,AAAA,AAAMkB;AAAN,AACE,AAAAC,AAAA,AAAAC,AAAmBtB;AAAnB,AAAA,AAAAqB;AAAA,AAAA,AAAAA,AAAWE;AAAX,AAA2B,AAACA,AAAAA,AAAAA;;AAA5B;;;AAEF,AAAA,AAAMC;AAAN,AACE,AAACJ;;AACD,AAACF,AAAOlB,AAAO,AAAA,AAAAsB,AAACG,AAAiChC,AAAgBiC;;AAEnE,AAAA,AAAMC;AAAN,AACE,AAACnB;;AACD,AAACgB;;AAEH,AAAA,AAAMI,AAAMC;AAAZ,AACE,AAAAC,AAAA,AAAAR,AAAE1B;AAAF,AAAA,AAAAkC,AAAAA,AAAAA,AAAQD,AAAAA;;AAEV","names":["js/imperium","js/imperium.client","js/imperium.client.receive-channel","imperium.client/receive-channel","cljs.core.atom","js/imperium.client.send!","imperium.client/send!","js/imperium.client.ws-state","imperium.client/ws-state","js/imperium.client.router","imperium.client/router","imperium.client/sente-config","imperium.client/state-watcher","_key","_atom","_old-state","new-state","js/console","imperium.client/create-client!","map__58003","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","ch-recv","send-fn","state","taoensso.sente.make_channel_socket_client_BANG_","cljs.core/reset!","cljs.core/add-watch","imperium.client/stop-router!","temp__5735__auto__","cljs.core/deref","stop-f","imperium.client/start-router!","taoensso.sente/start-client-chsk-router!","imperium.ws-handlers/event-msg-handler","imperium.client/start!","imperium.client/send","message","fexpr__58005"],"sourcesContent":["(ns imperium.client\n  (:require [taoensso.sente :as sente]\n            [imperium.ws-handlers :as handlers]\n            [clojure.core.async :as async]))\n\n(defonce receive-channel (atom nil))\n(defonce send! (atom nil))\n(defonce ws-state (atom nil))\n(defonce router (atom nil))\n\n(def sente-config {:type     :auto\n                   :packer   :edn\n                   :protocol :http\n                   :host     \"localhost\"\n                   :port     8890})\n\n(defn state-watcher [_key _atom _old-state new-state]\n  (.warn js/console \"New state\" new-state))\n\n(defn create-client! []\n  (let [{:keys [ch-recv send-fn state]} (sente/make-channel-socket-client! \"/ws\" nil sente-config)]\n    (reset! receive-channel ch-recv)\n    (reset! send! send-fn)\n    (reset! ws-state state)\n    (add-watch state :state-watcher state-watcher)))\n\n(defn stop-router! []\n  (when-let [stop-f @router] (stop-f)))\n\n(defn start-router! []\n  (stop-router!)\n  (reset! router (sente/start-client-chsk-router! @receive-channel handlers/event-msg-handler)))\n\n(defn start! []\n  (create-client!)\n  (start-router!))\n\n(defn send [message]\n  (@send! message))\n\n(comment\n  (start!)\n  (@send! [:imperium/b {:text \"thing\"}])\n  @ws-state)"]}