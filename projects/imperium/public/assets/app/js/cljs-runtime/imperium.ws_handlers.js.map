{"version":3,"sources":["imperium/ws_handlers.cljs"],"mappings":";AAGA,AAAA,AAAMA,AAAKC,AAAQC;AAAnB,AACE,AAAMC,AAAWF,AAAQ,AAAYG,AAAQ,AAACC,AAAQH;;AAExD,AAAA,AAAAI,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAUS;AAAVR,AAAA,AAAAD,AAAA;AAAAE,AAAA,AAAAF,AAAA;AAAAG,AAAA,AAAAH,AAAA;AAAAI,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAAAA;;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAJ,AAAAL,AAAAE,AAAAC,AAAAC;;;AAEA,AAAA,AAAAO,AAAMK;AAAN,AAAA,AAAAJ,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AACQK;AADR,AAAAX,AAAAM,AAAA,AACsBM;AADtB,AAAAZ,AAAAM,AAAA,AACyBO;AADzB,AAAAb,AAAAM,AAAA,AAC+BQ;AAD/B,AAEE,AAACV,AAAmBO;;AAEtB,AAAAP,AAAA,AAAA,AAAAW;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAT,AAAA,AAAAS,AAAA,AAAA,AAAA,AAAA,AAAAR,AAAAC,AAAAO,AAAAA;AAAA,AAAAhB,AAAAgB,AAAA,AACWF;AADX,AAEE,AAAA,AAAC7B,AAAuB6B;;AAE1B,AAAAV,AAAA,AAAA,AAAAa;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAX,AAAA,AAAAW,AAAA,AAAA,AAAA,AAAA,AAAAV,AAAAC,AAAAS,AAAAA;AAAA,AAAAlB,AAAAkB,AAAA,AACWL;AADX,AAEE,AAAA,AAAC5B,AAA8B4B","names":["imperium.ws-handlers/log","message","data","js/console","js/JSON","cljs.core/clj->js","js/imperium","js/imperium.ws-handlers","js/imperium.ws-handlers.-event-msg-handler","method-table__4619__auto__","cljs.core.atom","prefer-table__4620__auto__","method-cache__4621__auto__","cached-hierarchy__4622__auto__","hierarchy__4623__auto__","cljs.core.get","fexpr__56355","cljs.core/MultiFn","cljs.core.symbol","imperium.ws-handlers/-event-msg-handler","p__56356","map__56357","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","imperium.ws-handlers/event-msg-handler","ev-msg","id","?data","event","p__56359","map__56360","p__56362","map__56363"],"sourcesContent":["(ns imperium.ws-handlers\n  (:require [re-frame.core :as rf]))\n\n(defn log [message data]\n  (.log js/console message (.stringify js/JSON (clj->js data))))\n\n(defmulti -event-msg-handler :id)\n\n(defn event-msg-handler\n  [{:as ev-msg :keys [id ?data event]}]\n  (-event-msg-handler ev-msg))\n\n(defmethod -event-msg-handler :default\n  [{:keys [event]}]\n  (log \"Unhandled event:\" event))\n\n(defmethod -event-msg-handler :chsk/recv\n  [{:keys [?data]}]\n  (log \"Push event from server:\" ?data))"]}