{"version":3,"sources":["day8/re_frame_10x/tools/shadow_dom.cljs"],"mappings":";AAGA;;;;AAAA,AAAMA,AAGHC,AAAYC;AAHf,AAIE,AAAMC,AAAU,AAAiBF,AAAYC;AAA7C,AACE,AAAIC;AACF,AAAcA;;AACd,AAAMC,AAAY,AAAQH;AACpBE,AAAY,AAAA,AAAgBF;AAC5BI,AAAY,AAAA,AAAA,AAAeF;AAFjC,AAME,AAACG,AAAOC,AAAoBF;;AAC5B,AAAA,AAACC,AAAOE;;AACR,AAAA,AAAeL,AAAeD;;AAC9B,AAAcE,AAAKD;;AACnB,AAACM,AAAgBN;;AACjBE","names":["day8.re-frame-10x.tools.shadow-dom/shadow-root","js-document","id","container","body","shadow-root","cljs.core/reset!","day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.runtime/*dom*","day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.runtime/*injected*","js/window.focus"],"sourcesContent":["(ns day8.re-frame-10x.tools.shadow-dom\n  (:require [day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.runtime :as spade.runtime]))\n\n(defn shadow-root\n  \"Creates a new div element with the id attached to the js-document <body>,\n   attaches a shadow DOM tree and returns a reference to its ShadowRoot.\"\n  [js-document id]\n  (let [container (.getElementById js-document id)]\n    (if container\n      (.-shadowRoot container)\n      (let [body        (.-body js-document)\n            container   (.createElement js-document \"div\")\n            shadow-root (.attachShadow container #js {:mode \"open\"})]\n        ;; Reset the Spade target to the ShadowRoot and empty the record of\n        ;; previously injected styles so everything is injected again as\n        ;; rendering occurs.\n        (reset! spade.runtime/*dom* shadow-root)\n        (reset! spade.runtime/*injected* {})\n        (.setAttribute container \"id\" id)\n        (.appendChild body container)\n        (js/window.focus container)\n        shadow-root))))"]}