{"version":3,"sources":["day8/re_frame_10x/navigation/views.cljs"],"mappings":"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","names":["day8.re-frame-10x.navigation.views/replay-button","cljs.core/deref","current-event","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.core.subscribe","day8.re-frame-10x.components.buttons/icon","day8.re-frame-10x.material/refresh","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core/dispatch","day8.re-frame-10x.navigation.views/replay-help-button","day8.re-frame-10x.components.hyperlinks/info","day8.re-frame-10x.navigation.views/tab-button-style-factory$","style-name52114","params52115","base-style52119","key__47223__auto__","cljs.core/meta","cljs.core/first","name52118","fexpr__52120","day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.util/build-style-name","style52117","cljs.core.into","day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.runtime/compile-css","factory-name52116","day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.util/factory->name","day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.runtime/ensure-style!","day8.re-frame-10x.navigation.views/tab-button-style","ambiance","active?","cljs.core._EQ_","day8.re-frame-10x.styles/nord1","day8.re-frame-10x.styles/nord4","day8.re-frame-10x.styles/nord0","day8.re-frame-10x.styles/nord5","day8.re-frame-10x.styles/gs-12","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/px","day8.re-frame-10x.styles/gs-19","day8.re-frame-10x.styles/gs-5","day8.re-frame-10x.styles/nord3","day8.re-frame-10x.styles/font-stack","day8.re-frame-10x.navigation.views/tab-button","panel-id","title","selected-tab","day8.re-frame-10x.components.re-com/v-box","day8.re-frame-10x.styles/gs-19s","day8.re-frame-10x.components.re-com/button","day8.re-frame-10x.navigation.views/tab-buttons-style-factory$","style-name52132","params52133","base-style52137","name52136","fexpr__52150","style52135","factory-name52134","day8.re-frame-10x.navigation.views/tab-buttons-style","day8.re-frame-10x.styles/navigation-border-top","day8.re-frame-10x.navigation.views/tab-buttons-left","debug?","day8.re-frame-10x.components.re-com/h-box","day8.re-frame-10x.styles/gs-31s","day8.re-frame-10x.navigation.views/tab-buttons-right-style-factory$","style-name52166","params52167","base-style52171","name52170","fexpr__52181","style52169","factory-name52168","day8.re-frame-10x.navigation.views/tab-buttons-right-style","day8.re-frame-10x.navigation.views/tab-buttons-right","day8.re-frame-10x.styles/gs-12s","p__52195","map__52196","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","day8.re-frame-10x.navigation.views/tab-buttons","day8.re-frame-10x.navigation.views/warning-style-factory$","style-name52205","params52206","base-style52210","name52209","fexpr__52225","style52208","factory-name52207","day8.re-frame-10x.navigation.views/warning-style","day8.re-frame-10x.styles/nord13","day8.re-frame-10x.navigation.views/warnings","external-window?","unloading?","and__4115__auto__","re-frame.trace/is-trace-enabled?","day8.re-frame-10x.navigation.views/error-style-factory$","style-name52250","params52251","base-style52255","name52254","fexpr__52261","style52253","factory-name52252","day8.re-frame-10x.navigation.views/error-style","day8.re-frame-10x.styles/nord11","day8.re-frame-10x.navigation.views/errors","popup-failed?","cljs.core/not","day8.re-frame-10x.components.re-com/hyperlink","day8.re-frame-10x.navigation.views/tab-content-style-factory$","style-name52266","params52267","base-style52271","name52270","fexpr__52272","style52269","factory-name52268","day8.re-frame-10x.navigation.views/tab-content-style","cljs.core/contains?","day8.re-frame-10x.navigation.views/tab-content","G__52273","cljs.core/Keyword","day8.re-frame-10x.panels.event.views/panel","day8.re-frame-10x.panels.fx.views/panel","day8.re-frame-10x.panels.app-db.views/panel","re-frame.db/app-db","day8.re-frame-10x.panels.subs.views/panel","day8.re-frame-10x.panels.timing.views/panel","day8.re-frame-10x.panels.traces.views/panel","day8.re-frame-10x.panels.debug.views/render","day8.re-frame-10x.panels.settings.views/render","day8.re-frame-10x.navigation.views/settings-button","day8.re-frame-10x.material/settings","day8.re-frame-10x.navigation.views/popout-button","day8.re-frame-10x.material/open-in-new","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core/dispatch-sync","day8.re-frame-10x.navigation.views/mount","day8.re-frame-10x.navigation.views/navigation-style-factory$","style-name52283","params52284","base-style52289","name52288","fexpr__52290","style52286","factory-name52285","day8.re-frame-10x.navigation.views/navigation-style","day8.re-frame-10x.styles/navigation-border-bottom","day8.re-frame-10x.navigation.views/devtools-inner-style-factory$","style-name52298","params52299","base-style52303","name52302","fexpr__52306","style52301","factory-name52300","day8.re-frame-10x.navigation.views/devtools-inner-style","day8.re-frame-10x.styles/colors-0","p__52307","map__52308","day8.re-frame-10x.navigation.views/devtools-inner","panel-type","showing-settings?","day8.re-frame-10x.styles/normalize","day8.re-frame-10x.components.re-com/label","day8.re-frame-10x.navigation.epochs.views/left-buttons","day8.re-frame-10x.styles/gs-5s","day8.re-frame-10x.navigation.epochs.views/epochs","day8.re-frame-10x.panels.settings.views/done-button","popup-window","popup-document","container","day8.re-frame-10x.tools.shadow-dom/shadow-root","resize-update-scheduled?","cljs.core.atom","handle-window-resize","e","G__52310","reagent.impl.batching/next-tick","width","height","cljs.core/reset!","handle-window-position","pos","map__52311","left","top","screen-left","screen-top","cljs.core.not_EQ_","window-position-interval","unmount","_","G__52313","js/clearInterval","goog.object/set","js/console.log","day8.re_frame_10x.inlined_deps.reagent.v1v0v0.reagent.dom.render","day8.re_frame_10x.inlined_deps.reagent.v1v0v0.reagent.core.create_class","js/setInterval"],"sourcesContent":["(ns day8.re-frame-10x.navigation.views\n  (:require\n    [goog.object :as gobj]\n    [re-frame.db :as db]\n    [re-frame.trace]\n    [reagent.impl.batching :as batching]\n    [day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.core :as r]\n    [day8.re-frame-10x.inlined-deps.reagent.v1v0v0.reagent.dom :as rdom]\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core :as rf]\n    [day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.core :refer [css style]]\n    [day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units :refer [px]]\n    [day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.core :refer [defclass]]\n    [day8.re-frame-10x.tools.pretty-print-condensed :as pp]\n    [day8.re-frame-10x.components.buttons :as buttons]\n    [day8.re-frame-10x.components.hyperlinks :as hyperlinks]\n    [day8.re-frame-10x.components.re-com :as rc]\n    [day8.re-frame-10x.navigation.events :as navigation.events]\n    [day8.re-frame-10x.navigation.subs :as navigation.subs]\n    [day8.re-frame-10x.navigation.epochs.events :as epochs.events]\n    [day8.re-frame-10x.navigation.epochs.subs :as epochs.subs]\n    [day8.re-frame-10x.navigation.epochs.views :as epochs.views]\n    [day8.re-frame-10x.panels.app-db.views :as app-db.views]\n    [day8.re-frame-10x.panels.debug.views :as debug.views]\n    [day8.re-frame-10x.panels.event.views :as event.views]\n    [day8.re-frame-10x.panels.fx.views :as fx.views]\n    [day8.re-frame-10x.panels.settings.events :as settings.events]\n    [day8.re-frame-10x.panels.settings.subs :as settings.subs]\n    [day8.re-frame-10x.panels.settings.views :as settings.views]\n    [day8.re-frame-10x.panels.subs.views :as subs.views]\n    [day8.re-frame-10x.panels.timing.views :as timing.views]\n    [day8.re-frame-10x.panels.traces.views :as traces.views]\n    [day8.re-frame-10x.material :as material]\n    [day8.re-frame-10x.svgs :as svgs]\n    [day8.re-frame-10x.styles :as styles]\n    [day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.runtime :as spade.runtime]\n    [day8.re-frame-10x.tools.shadow-dom :as tools.shadow-dom]))\n\n\n#_(defglobal container-styles\n    [:#--re-frame-10x--\n     [:.container--replay-button\n      {:width  styles/gs-81\n       :height \"29px\"}] ;; styles/gs-31s - 2 * 1px border\n     [:.container--info-button\n      {:border-radius    \"50%\"\n       :color            \"white\"\n       :background-color styles/blue-modern-color\n       :width            styles/gs-12s\n       :height           styles/gs-12s}]\n     [:.pulse-previous\n      {:animation-duration \"1000ms\"\n       :animation-name     \"pulse-previous-re-frame-10x\"}]    ;; Defined in day8.re-frame-10x.styles/at-keyframes\n     [:.pulse-next\n      {:animation-duration \"1000ms\"\n       :animation-name     \"pulse-next-re-frame-10x\"}]])\n\n(defn replay-button\n  []\n  (let [current-event @(rf/subscribe [::epochs.subs/selected-event])]\n    (when (some? current-event)\n      [buttons/icon\n       {:icon     [material/refresh]\n        :label    \"replay\"\n        :title    \"replay\"\n        :on-click #(rf/dispatch [::epochs.events/replay])}])))\n\n(defn replay-help-button\n  []\n  (let [current-event @(rf/subscribe [::epochs.subs/selected-event])]\n    (when (some? current-event)\n      [hyperlinks/info \"https://github.com/day8/re-frame-10x/blob/master/docs/HyperlinkedInformation/ReplayButton.md\"])))\n\n(defclass tab-button-style\n  [ambiance active?]\n  {:z-index 1}\n  [:.rc-button ;; .tab .tab.active\n   {:background     (if (= :bright ambiance)\n                      (if active? :#fff styles/nord1)\n                      (if active? styles/nord1 styles/nord4))\n    :color          (if (= :bright ambiance)\n                      (if active? styles/nord0 styles/nord4)\n                      (if active? styles/nord5 styles/nord0))\n    :padding        [[0 styles/gs-12 (px 3) styles/gs-12]]\n    :height         styles/gs-19\n    :margin-right   styles/gs-5\n    :border-top     [[(px 1) :solid styles/nord3]]\n    :border-left    [[(px 1) :solid styles/nord3]]\n    :border-right   [[(px 1) :solid styles/nord3]]\n    :border-bottom  :none\n    :border-radius  [[(px 3) (px 3) 0 0]]\n    :font-size      (px 14)\n    :font-family    styles/font-stack\n    :font-weight    400}\n   (when-not active?\n     [:&:hover\n      {:cursor           :pointer\n       :background-color :#fff\n       :color            styles/nord1}])])\n\n(defn tab-button\n  [panel-id title]\n  (let [ambiance     @(rf/subscribe [::settings.subs/ambiance])\n        selected-tab @(rf/subscribe [::settings.subs/selected-tab])\n        active?      (= panel-id selected-tab)]\n    [rc/v-box\n     :height   styles/gs-19s\n     :class    (tab-button-style ambiance active?)\n     :children [[rc/button\n                 :label    title\n                 :on-click #(rf/dispatch [::settings.events/selected-tab panel-id])]]]))\n\n(defclass tab-buttons-style\n  [ambiance]\n  {:composes     (styles/navigation-border-top ambiance)\n   :padding-left styles/gs-19})\n\n(defn tab-buttons-left\n  [debug?]\n  [rc/h-box\n   :align    :end\n   :height   styles/gs-31s\n   :children [[tab-button :event \"event\"]\n              [tab-button :fx \"fx\"]\n              [tab-button :app-db \"app-db\"]\n              [tab-button :subs \"subs\"]\n              [tab-button :traces \"traces\"]\n              [tab-button :timing \"timing\"]\n              (when debug?\n                [tab-button :debug \"debug\"])]])\n\n(defclass tab-buttons-right-style\n  [ambiance]\n  {:padding [[0 styles/gs-5 0 0]]})\n\n(defn tab-buttons-right\n  []\n  (let [ambiance @(rf/subscribe [::settings.subs/ambiance])]\n    [rc/h-box\n     :class    (tab-buttons-right-style ambiance)\n     :align    :center\n     :gap      styles/gs-12s\n     :children [;; TODO: add 'Replay' text, and smaller icon.\n                [replay-button]\n                ;; TODO: help smaller than what is currently to indicate Reply button is more important/relationship. e.g. just question mark, no button.\n                [replay-help-button]]]))\n\n(defn tab-buttons\n  [{:keys [debug?]}]\n  (let [ambiance @(rf/subscribe [::settings.subs/ambiance])]\n    [rc/h-box\n     :class    (tab-buttons-style ambiance)\n     :justify  :between\n     :children [[tab-buttons-left debug?]\n                [tab-buttons-right]]]))\n\n(defclass warning-style\n  [ambiance]\n  {:background-color styles/nord13\n   :word-wrap        :break-word\n   :margin-left      styles/gs-19\n   :margin-right     styles/gs-19})\n\n(defn warnings\n  [external-window?]\n  (let [ambiance   @(rf/subscribe [::settings.subs/ambiance])\n        unloading? @(rf/subscribe [::navigation.subs/unloading?])]\n    [:<>\n     (when (and external-window? unloading?)\n       [:h1\n        {:class (warning-style ambiance)}\n        \"Host window has closed. Reopen external window to continue tracing.\"])\n     (when-not (re-frame.trace/is-trace-enabled?)\n       [:h1\n        {:class (warning-style ambiance)}\n        \"Tracing is not enabled. Please set \"\n        ;; Note this Closure define is in re-frame, not re-frame-10x\n        [:pre \"{re-frame.trace.trace-enabled? true}\"] \" in \" [:pre \":closure-defines\"]])]))\n\n(defclass error-style\n  [ambiance]\n  {:background-color styles/nord11\n   :margin-left      styles/gs-19\n   :margin-right     styles/gs-19})\n\n(defn errors\n  [external-window?]\n  (let [ambiance      @(rf/subscribe [::settings.subs/ambiance])\n        popup-failed? @(rf/subscribe [::navigation.subs/popup-failed?])]\n    (when (and (not external-window?) popup-failed?)\n      [:h1\n       {:class (error-style ambiance)}\n       \"Couldn't open external window. Check if popups are allowed?\"\n       [rc/hyperlink\n        :label    \"Dismiss\"\n        :on-click #(rf/dispatch [::navigation.events/dismiss-popup-failed])]])))\n\n(defclass tab-content-style\n  [ambiance selected-tab]\n  {:color       (if (= :bright ambiance) styles/nord0 styles/nord5)\n   :margin-top  styles/gs-19s\n   :margin-left styles/gs-19s\n   :overflow-y  (if (contains? #{:event :fx :parts :timing :debug :settings} selected-tab)\n                  \"auto\"\n                  \"initial\")})\n\n(defn tab-content\n  []\n  (let [ambiance     @(rf/subscribe [::settings.subs/ambiance])\n        selected-tab @(rf/subscribe [::settings.subs/selected-tab])]\n    [rc/v-box\n     :class    (tab-content-style ambiance selected-tab)   ;;\"tab-wrapper\"\n     :size     \"1\"\n     :children [(case selected-tab\n                  :event    [event.views/panel]\n                  :fx       [fx.views/panel]\n                  :app-db   [app-db.views/panel db/app-db]\n                  :subs     [subs.views/panel]\n                  :timing   [timing.views/panel]\n                  :traces   [traces.views/panel]\n                  :debug    [debug.views/render]\n                  :settings [settings.views/render]\n                            [app-db.views/panel db/app-db])]]))\n\n(defn settings-button\n  []\n  [buttons/icon\n   {:icon     [material/settings]\n    :title    \"Settings\"\n    :on-click #(rf/dispatch [::settings.events/toggle])}])\n\n(declare mount)\n\n(defn popout-button\n  [external-window?]\n  (when-not external-window?\n    [buttons/icon\n     {:icon     [material/open-in-new]\n      :title    \"Pop out\"\n      :on-click #(rf/dispatch-sync [::navigation.events/launch-external mount])}]))\n\n(defclass navigation-style\n  [ambiance]\n  {:composes (styles/navigation-border-bottom ambiance)}\n  [:.rc-label\n   {:padding-left styles/gs-19s}])\n\n(defclass devtools-inner-style\n  [ambiance]\n  {:composes (styles/colors-0 ambiance)})\n\n(defn devtools-inner [{:keys [panel-type debug?]}]\n  (let [ambiance          @(rf/subscribe [::settings.subs/ambiance])\n        selected-tab      @(rf/subscribe [::settings.subs/selected-tab])\n        external-window?  (= panel-type :popup)\n        showing-settings? (= selected-tab :settings)]\n    [rc/v-box\n     :class    (str (styles/normalize) \" \" (devtools-inner-style ambiance))\n     :height   \"100%\"\n     :width    \"100%\"\n     :children\n     [(if-not showing-settings?\n        [:<>\n         [rc/v-box\n          :children\n          [[rc/h-box\n            :class   (navigation-style ambiance)\n            :align   :center\n            :height  styles/gs-31s\n            :gap     styles/gs-19s\n            :children\n            [[rc/label :label \"Event History\"]\n             [epochs.views/left-buttons]\n             [rc/h-box\n              :gap      styles/gs-12s\n              :style    {:margin-right styles/gs-5s}\n              :children [[settings-button]\n                         [popout-button external-window?]]]]]\n           [epochs.views/epochs]]]\n         [tab-buttons {:debug? debug?}]]\n        [rc/h-box\n         :class   (navigation-style ambiance)\n         :align   :center\n         :justify :between\n         :height  styles/gs-31s\n         :gap     styles/gs-19s\n         :children\n         [[rc/label :label \"Settings\"]\n          [rc/h-box\n           :gap   styles/gs-12s\n           :style {:margin-right styles/gs-19s}\n           :children\n           [[settings.views/done-button]\n            [popout-button external-window?]]]]])\n      [warnings external-window?]\n      [errors external-window?]\n      [tab-content]]]))\n\n(defn mount [popup-window popup-document]\n  ;; When programming here, we need to be careful about which document and window\n  ;; we are operating on, and keep in mind that the window can close without going\n  ;; through standard react lifecycle, so we hook the beforeunload event.\n  (let [container                (tools.shadow-dom/shadow-root popup-document \"--re-frame-10x--\")\n        resize-update-scheduled? (atom false)\n        handle-window-resize     (fn [e]\n                                   (when-not @resize-update-scheduled?\n                                     (batching/next-tick\n                                       (fn []\n                                         (let [width  (.-innerWidth popup-window)\n                                               height (.-innerHeight popup-window)]\n                                           (rf/dispatch [::settings.events/external-window-resize {:width width :height height}]))\n                                         (reset! resize-update-scheduled? false)))\n                                     (reset! resize-update-scheduled? true)))\n        handle-window-position   (let [pos (atom {})]\n                                   (fn []\n                                     ;; Only update re-frame if the windows position has changed.\n                                     (let [{:keys [left top]} @pos\n                                           screen-left (.-screenX popup-window)\n                                           screen-top  (.-screenY popup-window)]\n                                       (when (or (not= left screen-left)\n                                                 (not= top screen-top))\n                                         (rf/dispatch [::settings.events/external-window-position {:left screen-left :top screen-top}])\n                                         (reset! pos {:left screen-left :top screen-top})))))\n        window-position-interval (atom nil)\n        unmount                  (fn [_]\n                                   (.removeEventListener popup-window \"resize\" handle-window-resize)\n                                   (some-> @window-position-interval js/clearInterval)\n                                   nil)]\n    (gobj/set popup-window \"onunload\" #(rf/dispatch [::navigation.events/external-closed]))\n    (js/console.log container)\n    (rdom/render\n      [(r/create-class\n         {:display-name           \"devtools outer external\"\n          :component-did-mount    (fn []\n                                    (.addEventListener popup-window \"resize\" handle-window-resize)\n                                    (.addEventListener popup-window \"beforeunload\" unmount)\n                                    ;; Check the window position every 10 seconds\n                                    (reset! window-position-interval\n                                            (js/setInterval\n                                              handle-window-position\n                                              2000)))\n          :component-will-unmount unmount\n          :reagent-render         (fn [] [devtools-inner {:panel-type :popup}])})]\n      container)))"]}