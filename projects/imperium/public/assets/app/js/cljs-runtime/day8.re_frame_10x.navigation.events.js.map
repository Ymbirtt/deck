{"version":3,"sources":["day8/re_frame_10x/navigation/events.cljs"],"mappings":";AAQA,AAAA,AAAA,AAACA,AAEEC,AACD,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAAF;AAAAE,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAaO;AAAbF,AAAAN;AAAA,AAAAO,AAAAD,AAAA,AAAA,AAAmBG;AAAnB,AAAA,AAAA,AAEG,AAAA,AAAA,AAAA,AAAAC,AAAAC,AAACC,AAAM,AAAA,AAAA,AAAA,AAACC,AAAOL;AAAf,AACqB,AAAAE,AAAAC,AAAAD,AAAAC,AAACF,AAAAA,AAAAA;AADtB,AAAA,AAAA,AAAA,AAAA,AAAA;;AAKL,AAAA,AAAA,AAACZ,AAEE,AAAA,AAAA,AAAA,AAAA,AAACiB,AACF,AAAAC,AAAkBE;AAAlB,AAAA,AAAAD,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAd,AAAA,AAAAc,AAAA,AAAA,AAAA,AAAA,AAAAb,AAAAC,AAAAY,AAAAA;AAAA,AAAAX,AAAAW,AAAA,AAAaR;AAAb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACuBA,AACA,AAAA,AAAA,AAAA,AAAA,AAACU,AACD,AAAA,AAAA,AAAA,AAACC;;AAG1B,AAAA,AAACtB,AAEC,AAAAuB,AAAkBH;AAAlB,AAAA,AAAAI,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAnB,AAAA,AAAAmB,AAAA,AAAA,AAAA,AAAA,AAAAlB,AAAAC,AAAAiB,AAAAA;AAAA,AAAAhB,AAAAgB,AAAA,AAAab;AAAb,AAAA,AAAA,AAAA,AAAA,AAAA,AACa,AAAA,AAAA,AAAA,AAAA,AAACU,AAASV;;AAGzB,AAAA,AAAA,AAACX,AAEE,AAAA,AAAA,AAAA,AAACyB,AAAuC,AAAA,AAACR,AAC1C,AAAKG,AAAEA;AAAP,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAIF,AAAA,AAAA,AAACM,AAEE,AAAA,AAAA,AAACD,AACF,AAAKE,AAAOP;AAAZ,AACE,AAAA,AAACQ,AAAOD","names":["day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.core.reg_event_fx","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core/trim-v","p__47047","p__47048","map__47049","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","vec__47050","cljs.core.nth","db","view-fn","p1__47045#","p2__47046#","cljs.core.merge","cljs.core.get_in","day8.re_frame_10x.fx.local_storage.after","p__47054","map__47055","_","cljs.core/assoc-in","day8.re-frame-10x.tools.coll/dissoc-in","p__47057","map__47058","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.core.path","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.core.reg_event_db","errors","cljs.core.dissoc"],"sourcesContent":["(ns day8.re-frame-10x.navigation.events\n  (:require\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core :as rf]\n    [day8.re-frame-10x.panels.settings.events                     :as settings.events]\n    [day8.re-frame-10x.fx.window                                  :as window]\n    [day8.re-frame-10x.fx.local-storage                           :as local-storage]\n    [day8.re-frame-10x.tools.coll                                 :as tools.coll]))\n\n(rf/reg-event-fx\n  ::launch-external\n  [rf/trim-v]\n  (fn [{:keys [db]} [view-fn]]\n    {::window/open-debugger-window\n     (merge (get-in db [:settings :external-window-dimensions])\n            {:on-load    #(view-fn %1 %2)\n             :on-success [::launch-external-success]\n             :on-failure [::launch-external-failure]})}))\n\n(rf/reg-event-fx\n  ::launch-external-success\n  [(local-storage/after \"external-window\" [:settings :external-window?])]\n  (fn [{:keys [db]} _]\n    {:db             (-> db\n                         (assoc-in [:settings :external-window?] true)\n                         (tools.coll/dissoc-in [:errors :popup-failed?]))\n     :dispatch-later [{:ms 200 :dispatch [::settings.events/show-panel? false]}]}))\n\n(rf/reg-event-fx\n  ::launch-external-failure\n  (fn [{:keys [db]} _]\n    {:db       (assoc-in db [:errors :popup-failed?] true)\n     :dispatch [::external-closed]}))\n\n(rf/reg-event-fx\n  ::external-closed\n  [(rf/path [:settings :external-window?]) (local-storage/after \"external-window?\")]\n  (fn [_ _]\n    {:db             false\n     :dispatch-later [{:ms 400 :dispatch [::settings.events/show-panel? true]}]}))\n\n(rf/reg-event-db\n  ::dismiss-popup-failed\n  [(rf/path [:errors])]\n  (fn [errors _]\n    (dissoc errors :popup-failed?)))"]}