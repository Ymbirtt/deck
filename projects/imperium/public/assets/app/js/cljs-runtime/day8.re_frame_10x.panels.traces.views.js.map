{"version":3,"sources":["day8/re_frame_10x/panels/traces/views.cljs"],"mappings":"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","names":["day8.re-frame-10x.panels.traces.views/selected-epoch-style-factory$","style-name49340","params49341","base-style49345","key__47223__auto__","cljs.core/meta","cljs.core/first","name49344","fexpr__49349","day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.util/build-style-name","style49343","cljs.core.into","day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.runtime/compile-css","factory-name49342","day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.util/factory->name","day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.runtime/ensure-style!","day8.re-frame-10x.panels.traces.views/selected-epoch-style","ambiance","active?","day8.re-frame-10x.styles/gs-12","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/px","day8.re-frame-10x.styles/gs-5","day8.re-frame-10x.styles/frame-2","day8.re-frame-10x.panels.traces.views/selected-epoch","cljs.core/deref","day8.re_frame_10x.inlined_deps.re_frame.v1v1v2.re_frame.core.subscribe","filter-by-selected-epoch?","model","day8.re-frame-10x.components.re-com/h-box","day8.re-frame-10x.styles/gs-12s","day8.re-frame-10x.components.inputs/radio-button","day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core/dispatch","cljs.core/not","day8.re-frame-10x.panels.traces.views/op-type->color","op-type","lighten-amount","G__49358","cljs.core/Keyword","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.color/lighten","day8.re-frame-10x.styles/nord14","day8.re-frame-10x.styles/nord15","day8.re-frame-10x.styles/nord11","day8.re-frame-10x.styles/nord12","day8.re-frame-10x.styles/nord8","day8.re-frame-10x.styles/nord10","day8.re-frame-10x.panels.traces.views/category-style-factory$","style-name49359","params49360","base-style49364","name49363","fexpr__49365","style49362","factory-name49361","day8.re-frame-10x.panels.traces.views/category-style","checked?","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.color/darken","day8.re-frame-10x.styles/nord1","day8.re-frame-10x.styles/gs-2","p__49373","map__49374","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","day8.re-frame-10x.panels.traces.views/category","label","keys","categories","cljs.core/contains?","day8.re-frame-10x.material/check-box","day8.re-frame-10x.styles/gs-19s","day8.re-frame-10x.material/check-box-outline-blank","day8.re-frame-10x.components.re-com/label","day8.re-frame-10x.panels.traces.views/categories-style-factory$","style-name49376","params49377","base-style49381","name49380","fexpr__49382","style49379","factory-name49378","day8.re-frame-10x.panels.traces.views/categories-style","day8.re-frame-10x.styles/gs-31","day8.re-frame-10x.panels.traces.views/filters","options","iter__4529__auto__","s__49384","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__49386","cljs.core/chunk-buffer","i__49385","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__49383","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","m","day8.re-frame-10x.panels.traces.views/draft-query-error-style-factory$","style-name49392","params49393","base-style49397","name49396","fexpr__49402","style49395","factory-name49394","day8.re-frame-10x.panels.traces.views/draft-query-error-style","day8.re-frame-10x.panels.traces.views/draft-query","p1__49410#","p1__49411#","draft-query-type","draft-query","draft-query-error?","cljs.core.keyword","day8.re-frame-10x.components.inputs/search","day8.re-frame-10x.panels.traces.views/query-clear-button-style-factory$","style-name49418","params49419","base-style49423","name49422","fexpr__49424","style49421","factory-name49420","day8.re-frame-10x.panels.traces.views/query-clear-button-style","day8.re-frame-10x.panels.traces.views/queries","queries","day8.re-frame-10x.components.re-com/v-box","cljs.core.map","p__49426","map__49427","query","type","id","cljs.core._EQ_","day8.re-frame-10x.components.re-com/box","day8.re-frame-10x.material/clear","day8.re-frame-10x.panels.traces.views/table-style-factory$","style-name49431","params49432","base-style49436","name49435","fexpr__49444","style49434","factory-name49433","day8.re-frame-10x.panels.traces.views/table-style","day8.re-frame-10x.styles/frame-1","day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units/percent","day8.re-frame-10x.panels.traces.views/table-header-expansion-style-factory$","style-name49445","params49446","base-style49450","name49449","fexpr__49458","style49448","factory-name49447","day8.re-frame-10x.panels.traces.views/table-header-expansion-style","day8.re-frame-10x.styles/colors-2","day8.re-frame-10x.panels.traces.views/table-header-style-factory$","style-name49465","params49466","base-style49471","name49470","fexpr__49472","style49468","factory-name49467","day8.re-frame-10x.panels.traces.views/table-header-style","day8.re-frame-10x.styles/nord4","day8.re-frame-10x.styles/nord3","day8.re-frame-10x.panels.traces.views/table-row-style-factory$","style-name49476","params49477","base-style49481","name49480","fexpr__49482","style49479","factory-name49478","day8.re-frame-10x.panels.traces.views/table-row-style","day8.re-frame-10x.panels.traces.views/table-row-expansion-style-factory$","style-name49487","params49488","base-style49492","name49491","fexpr__49496","style49490","factory-name49489","day8.re-frame-10x.panels.traces.views/table-row-expansion-style","day8.re-frame-10x.panels.traces.views/table-row-expanded-style-factory$","style-name49498","params49499","base-style49503","name49502","fexpr__49504","style49501","factory-name49500","day8.re-frame-10x.panels.traces.views/table-row-expanded-style","syntax-color-scheme","day8.re-frame-10x.styles/syntax-color","p__49505","map__49507","day8.re-frame-10x.panels.traces.views/table-row","operation","tags","duration","trace","debug?","expansions","expanded?","cljs.core.get_in","op-name","cljs.core/vector?","cljs.core/second","day8.re-frame-10x.styles/gs-31s","day8.re-frame-10x.material/arrow-drop-down","day8.re-frame-10x.material/arrow-right","day8.re-frame-10x.styles/gs-212s","ev","cljs.core/name","day8.re-frame-10x.tools.pretty-print-condensed/truncate","day8.re-frame-10x.tools.pretty-print-condensed/str->namespaced-sym","vec__49518","seq__49519","first__49520","cljs.core/next","_","params","or__4126__auto__","day8.re-frame-10x.tools.pretty-print-condensed/pretty-condensed","clojure.string.join","day8.re_frame_10x.tools.pretty_print_condensed.truncate_string","day8.re-frame-10x.styles/gs-81s","day8.re-frame-10x.components.cljs-devtools/simple-render","day8.re-frame-10x.panels.traces.views/table-header","map__49527","traces","show-all?","day8.re-frame-10x.material/unfold-less","day8.re-frame-10x.material/unfold-more","day8.re-frame-10x.panels.traces.views/table-body-style-factory$","style-name49532","params49533","base-style49537","name49536","fexpr__49539","style49535","factory-name49534","day8.re-frame-10x.panels.traces.views/table-body-style","day8.re-frame-10x.panels.traces.views/table","day8.re-frame-10x.panels.traces.views/panel-style-factory$","style-name49541","params49542","style49544","factory-name49543","day8.re-frame-10x.panels.traces.views/panel-style","day8.re-frame-10x.panels.traces.views/panel","cljs.core/chunk-first"],"sourcesContent":["(ns day8.re-frame-10x.panels.traces.views\n  (:require\n    [day8.re-frame-10x.inlined-deps.re-frame.v1v1v2.re-frame.core :as rf]\n    [day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.units :refer [px percent]]\n    [day8.re-frame-10x.inlined-deps.spade.v1v1v0.spade.core :refer [defclass]]\n    [day8.re-frame-10x.components.re-com :as rc]\n    [day8.re-frame-10x.panels.settings.subs :as settings.subs]\n    [day8.re-frame-10x.panels.traces.events :as traces.events]\n    [day8.re-frame-10x.panels.traces.subs :as traces.subs]\n    [day8.re-frame-10x.material :as material]\n    [day8.re-frame-10x.styles :as styles]\n    [day8.re-frame-10x.tools.pretty-print-condensed :as pp]\n    [clojure.string :as string]\n    [day8.re-frame-10x.components.cljs-devtools :as cljs-devtools]\n    [day8.re-frame-10x.inlined-deps.garden.v1v3v10.garden.color :as color]\n    [day8.re-frame-10x.components.inputs :as inputs]))\n\n(defclass selected-epoch-style\n  [ambiance active?]\n  {;:composes (styles/control-2 ambiance active?)\n   ;:height   styles/gs-31\n   :margin-left styles/gs-12\n   :padding          [[(px 1) styles/gs-5]]\n   :composes (styles/frame-2 ambiance)\n   #_#_:padding  [[0 styles/gs-12]]})\n\n(defn selected-epoch\n  []\n  (let [ambiance                  @(rf/subscribe [::settings.subs/ambiance])\n        filter-by-selected-epoch? @(rf/subscribe [::traces.subs/filter-by-selected-epoch?])\n        model                     (if filter-by-selected-epoch? :epoch :all)]\n    [rc/h-box\n     :class    (selected-epoch-style ambiance filter-by-selected-epoch?)\n     :align    :center\n     :gap      styles/gs-12s\n     :children\n     [[inputs/radio-button\n       {:label     \"only this epoch\"\n        :model     model\n        :value     :epoch\n        :on-change #(rf/dispatch [::traces.events/set-filter-by-selected-epoch? (not filter-by-selected-epoch?)])}]\n      [inputs/radio-button\n       {:label     \"all epochs\"\n        :model     model\n        :value     :all\n        :on-change #(rf/dispatch [::traces.events/set-filter-by-selected-epoch? (not filter-by-selected-epoch?)])}]]]))\n\n(defn op-type->color\n  [op-type]\n  (let [lighten-amount 30]\n    (case op-type\n      :sub/create                  (color/lighten styles/nord14 lighten-amount)\n      :sub/run                     (color/lighten  styles/nord15 lighten-amount)\n      :sub/dispose                 (color/lighten styles/nord11 lighten-amount)\n      :event                       (color/lighten styles/nord12 lighten-amount)\n      :render                      (color/lighten styles/nord8 lighten-amount)\n      :re-frame.router/fsm-trigger (color/lighten styles/nord10 lighten-amount)\n      nil)))\n\n(defclass category-style\n  [ambiance op-type checked?]\n  {;:composes        (styles/control-2 ambiance active?)\n   :font-size        (px 12)\n   :background-color (op-type->color op-type)\n   :border           [[(px 1) :solid (color/darken (op-type->color op-type) 15)]]\n   :color            styles/nord1\n   :cursor           :pointer\n   :border-radius    styles/gs-2\n   :display          :flex\n   :align-items      :center\n   :margin-left      styles/gs-12\n   :padding          [[(px 1) styles/gs-5]]}\n  [:svg\n   {:margin-right styles/gs-5}\n   [:path\n    {:fill (color/darken (op-type->color op-type) 20)}]]\n  [:&:hover\n   {:background-color (color/lighten (op-type->color op-type) 5)}])\n\n(defn category\n  [{:keys [label keys]}]\n  (let [ambiance   @(rf/subscribe [::settings.subs/ambiance])\n        categories @(rf/subscribe [::traces.subs/categories])\n        checked?   (contains? categories (first keys))]\n    [:li {:class    (category-style ambiance (first keys) checked?)\n          :on-click #(rf/dispatch [::traces.events/toggle-categories keys])}\n     (if checked?\n       [material/check-box\n        {:size styles/gs-19s}]\n       [material/check-box-outline-blank\n        {:size styles/gs-19s}])\n     [rc/label\n      :label label]]))\n\n(defclass categories-style\n  [ambiance]\n  {;:composes    (styles/frame-1 ambiance)\n   :list-style  :none\n   :display     :flex\n   :align-items :center\n   :height      styles/gs-31\n   :margin      0\n   :padding     0})\n\n(defn filters\n  []\n  (let [ambiance @(rf/subscribe [::settings.subs/ambiance])\n        options  [{:label \"events\"\n                   :keys #{:event}}\n                  {:label \"subs\"\n                   :keys  #{:sub/run :sub/create :sub/dispose}}\n                  {:label \"reagent\"\n                   :keys  #{:render}}\n                  {:label \"internals\"\n                   :keys  #{:re-frame.router/fsm-trigger :componentWillUnmount}}]]\n    [rc/h-box\n     :align    :center\n     :children\n     [\n      (into\n        [:ul {:class (categories-style ambiance)}\n         [rc/label :label \"show:\"]]\n        (for [m options]\n          [category m]))\n      [selected-epoch]]]))\n\n(defclass draft-query-error-style\n  [ambiance]\n  {:color styles/nord11})\n\n(defn draft-query\n  []\n  (let [ambiance           @(rf/subscribe [::settings.subs/ambiance])\n        draft-query-type   @(rf/subscribe [::traces.subs/draft-query-type])\n        draft-query        @(rf/subscribe [::traces.subs/draft-query])\n        draft-query-error? @(rf/subscribe [::traces.subs/draft-query-error])]\n    [rc/h-box\n     :children\n     [[:select {:value     draft-query-type\n                :on-change #(rf/dispatch [::traces.events/set-draft-query-type\n                                          (keyword (.. % -target -value))])}\n       [:option {:value \"contains\"} \"contains\"]\n       [:option {:value \"slower-than\"} \"slower than\"]]\n      [inputs/search\n       {:on-save     #(rf/dispatch [::traces.events/save-draft-query])\n        :on-change   #(rf/dispatch [::traces.events/set-draft-query\n                                    (.. % -target -value)])\n        :placeholder \"filter traces\"}]\n      (if draft-query-error?\n        [rc/label\n         :class (draft-query-error-style ambiance)\n         :label \"Please enter a valid number.\"])]]))\n\n(defclass query-clear-button-style\n  [ambiance]\n  {:cursor :pointer})\n\n(defn queries\n  []\n  (let [ambiance @(rf/subscribe [::settings.subs/ambiance])\n        queries  @(rf/subscribe [::traces.subs/queries])]\n    [rc/v-box\n     :gap      styles/gs-19s\n     :children\n     [[draft-query]\n      (when (seq queries)\n        [rc/h-box\n         :gap      styles/gs-12s\n         :children\n         (into\n           []\n           (map\n             (fn [{:keys [query type id]}]\n               [rc/h-box\n                :align    :center\n                :children\n                [[:span type \": \" query (when (= :slower-than type) \" ms\")]\n                 [rc/box\n                  :attr  {:on-click #(rf/dispatch [::traces.events/remove-query {:id id}])}\n                  :class (query-clear-button-style ambiance)\n                  :child\n                  [material/clear]]]])\n             queries))])]]))\n\n\n(defclass table-style\n  [ambiance]\n  {:composes   (styles/frame-1 ambiance)\n   :width      (percent 100)\n   :overflow   :hidden})\n\n(defclass table-header-expansion-style\n  [ambiance]\n  {:composes  (styles/colors-2 ambiance)\n   :cursor    :pointer})\n\n(defclass table-header-style\n  [ambiance]\n  {:composes    (styles/colors-2 ambiance)\n   :border-left [[(px 1) :solid (if (= :bright ambiance) styles/nord4 styles/nord3)]]})\n\n(defclass table-row-style\n  [ambiance op-type]\n  {:color            styles/nord1\n   :background-color (op-type->color op-type)})\n\n(defclass table-row-expansion-style\n  [ambiance]\n  {:cursor :pointer}\n  [:svg :path\n   {:fill styles/nord1}]\n  [:&:hover\n   [:svg :path\n    {:fill styles/nord3}]])\n\n(defclass table-row-expanded-style\n  [ambiance syntax-color-scheme]\n  {:background-color (styles/syntax-color ambiance syntax-color-scheme :signature-background)})\n\n(defn table-row\n  [{:keys [op-type id operation tags duration] :as trace}]\n  (let [ambiance            @(rf/subscribe [::settings.subs/ambiance])\n        syntax-color-scheme @(rf/subscribe [::settings.subs/syntax-color-scheme])\n        debug?              @(rf/subscribe [::settings.subs/debug?])\n        expansions          @(rf/subscribe [::traces.subs/expansions])\n        expanded?           (get-in expansions [:overrides id] (:show-all? expansions))\n        op-name             (if (vector? operation)\n                              (second operation)\n                              operation)]\n    [:<>\n     [rc/h-box\n      :class    (table-row-style ambiance op-type)\n      :height   styles/gs-19s\n      :children\n      [[rc/box\n        :width   styles/gs-31s\n        :class   (table-row-expansion-style ambiance)\n        :attr    {:on-click #(rf/dispatch [::traces.events/toggle-expansion id])}\n        :justify :center\n        :child\n        (if expanded?\n          [material/arrow-drop-down]\n          [material/arrow-right])]\n       [rc/box\n        :size  \"2\"\n        :min-width styles/gs-212s\n        :attr  {:on-click\n                (fn [ev]\n                  (rf/dispatch [::traces.events/add-query (name op-type) :contains])\n                  (.stopPropagation ev))}\n        :child\n        [:span (str op-type)]]\n       [rc/h-box\n        :size \"2\"\n        :min-width styles/gs-212s\n        :attr {:on-click\n               (fn [ev]\n                 (rf/dispatch [::traces.events/add-query (name op-name) :contains])\n                 (.stopPropagation ev))}\n        :children\n        [[:span (pp/truncate 20 :middle (pp/str->namespaced-sym op-name))]\n         (when-let [[_ & params] (or (get tags :query-v)\n                                     (get tags :event))]\n           [:span\n            (->> (map pp/pretty-condensed params)\n                 (string/join \", \")\n                 (pp/truncate-string :middle 40))])]]\n       [rc/box\n        :size \"1\"\n        :min-width styles/gs-81s\n        :child\n        (if debug?\n          [:span (:reaction (:tags trace)) \"/\" id]\n          [:span (.toFixed duration 1) \" ms\"])]]]\n     (when expanded?\n       [rc/h-box\n        :class    (table-row-expanded-style ambiance syntax-color-scheme)\n        :children\n        [[rc/box\n          :width styles/gs-31s\n          :child \"\"]\n         [rc/box\n          :size  \"1\"\n          :child\n          [cljs-devtools/simple-render tags []]]]])]))\n\n(defn table-header\n  []\n  (let [ambiance            @(rf/subscribe [::settings.subs/ambiance])\n        traces              @(rf/subscribe [::traces.subs/sorted])\n        {:keys [show-all?]} #(rf/subscribe [::traces.subs/expansions])]\n    [rc/h-box\n     :height   styles/gs-31s\n     :children\n     [[rc/box\n       :class   (table-header-expansion-style ambiance)\n       :align   :center\n       :justify :center\n       :width   styles/gs-31s\n       :attr    {:on-click #(rf/dispatch [::traces.events/toggle-expansions])}\n       :child   (if show-all?\n                  [material/unfold-less]\n                  [material/unfold-more])]\n      [rc/box\n       :class     (table-header-style ambiance)\n       :align     :center\n       :justify   :center\n       :size      \"2\"\n       :min-width styles/gs-212s\n       :height    styles/gs-31s\n       :child     [rc/label :label \"operations\"]]\n      [rc/box\n       :class     (table-header-style ambiance)\n       :align     :center\n       :justify   :center\n       :size      \"2\"\n       :min-width styles/gs-212s\n       :child     [rc/label :label (str (count traces) \" traces\")]]\n      [rc/box\n       :class     (table-header-style ambiance)\n       :align     :center\n       :justify   :center\n       :size      \"1\"\n       :min-width styles/gs-81s\n       :child     [rc/label :label \"meta\"]]\n      [rc/box\n       :class (table-header-style ambiance)\n       :width \"17px\" ;; y scrollbar width\n       :child \"\"]]]))\n\n(defclass table-body-style\n  [ambiance]\n  {:overflow-x :auto\n   :overflow-y :scroll})\n\n(defn table\n  []\n  (let [ambiance @(rf/subscribe [::settings.subs/ambiance])\n        traces   @(rf/subscribe [::traces.subs/sorted])]\n    [rc/v-box\n     :size     \"1\"\n     :class    (table-style ambiance)\n     :children\n     [[table-header]\n      [rc/v-box\n       :size     \"1\"\n       :class    (table-body-style ambiance)\n       :children\n       (into [] (->> traces (map (fn [trace] [table-row trace]))))]]]))\n\n(defclass panel-style\n  []\n  {:margin-right styles/gs-5\n   :overflow     :hidden})\n\n(defn panel\n  []\n  [rc/v-box\n   :size     \"1\"\n   :class    (panel-style)\n   :align    :start\n   :gap      styles/gs-19s\n   :children\n   [[filters]\n    [queries]\n    [table]]])"]}